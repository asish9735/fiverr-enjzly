<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Cart extends MX_Controller {

	function __construct()
	{
		$this->loggedUser=$this->session->userdata('loggedUser');
		$this->access_member_type='C';
		if($this->loggedUser){
			$this->member_id=$this->loggedUser['MID'];	
			$this->organization_id=$this->loggedUser['OID'];
			$this->access_user_id=$this->loggedUser['LID'];	
			$this->profile_connection_id=$this->loggedUser['LAST_PCI'];
			$this->access_member_type=$this->loggedUser['ACC_P_TYP'];
			$this->username=$this->loggedUser['UNAME'];	
			
		}else{
			show_404();
		}
		loadModel('cart_model');
		loadModel('notifications/notification_model');
			parent::__construct();
	}
	public function checkout()
	{
		$data=array();
		
		
		$sub_total=$proposal_price=$extra_price=0;
		$CheckOutData=$this->session->userdata('CheckOutData');
		$data['CheckOutData']=$CheckOutData;
		$data['loggedUser']=$this->loggedUser;
		if($CheckOutData && $CheckOutData['proposal_id']){
			if($this->session->userdata('referred-'.$CheckOutData['proposal_id'])){
				$data['referred']=$this->session->userdata('referred-'.$CheckOutData['proposal_id']);
				$data['referred']['username']=getUserName($data['referred']['refer_id']);
			}
			$data['proposal_details']=getProposalDetails($CheckOutData['proposal_id'],array('proposal'));
			if($CheckOutData['package_id']){
				$arr=array(
					'select'=>'p.package_id,p.package_name,p.price,p.description,p.revisions,p.delivery_time',
					'table'=>'proposal_packages as p',
					'where'=>array('p.proposal_id'=>$CheckOutData['proposal_id'],'p.package_id'=>$CheckOutData['package_id']),
					'single_row'=>TRUE
				);
				$proposal_packages=getData($arr);
				if($proposal_packages){
					$proposal_price=$proposal_packages->price;
				}else{
					$proposal_price=$data['proposal_details']['proposal']->display_price;
				}
				
			}else{
				$proposal_price=$data['proposal_details']['proposal']->proposal_price;
			}
			if($CheckOutData['coupon']){
				$arr=array(
							'select'=>'c.coupon_id,c.coupon_type,c.coupon_price,c.coupon_limit,c.coupon_used',
							'table'=>'coupons as c',
							'where'=>array('c.proposal_id'=>$CheckOutData['proposal_id'],'c.coupon_code'=>$CheckOutData['coupon']),
							'single_row'=>TRUE
						);
				$coupons=getData($arr);
				if($coupons){
					if($coupons->coupon_type==''){
						$proposal_price = $coupons->coupon_price;
					}else{
						$numberToAdd = ($proposal_price / 100) * $coupons->coupon_price;
						$proposal_price = $proposal_price - $numberToAdd;
					}
				}
			}
			$sub_total+= $proposal_price*$CheckOutData['qty'];
			if($CheckOutData['extra']){
				foreach($CheckOutData['extra'] as $e=>$extra){
					$arr=array(
							'select'=>'p.id,p.name,p.price',
							'table'=>'proposal_extras as p',
							'where'=>array('p.proposal_id'=>$CheckOutData['proposal_id'],'p.id'=>$extra),
							'single_row'=>TRUE
						);
					$proposal_extras=getData($arr);
					if($proposal_extras){
						$extra_price+=$proposal_extras->price;
					}
				}
			}
			$sub_total+=$extra_price;
			
		}else{
			redirect(get_link('homeURL'));
		}
		$data['CheckOutData']['extra_price']=$extra_price;
		$data['CheckOutData']['proposal_price']=$proposal_price;
		$data['CheckOutData']['sub_total']=$sub_total;
		$this->session->set_userdata('CheckOutData',$data['CheckOutData']);
		$data['member_details']=getMemberDetails($this->member_id,array('main'=>1));
		$data['load_js']=load_js(array('mycustom.js'));
		$templateLayout=array('view'=>'checkout','type'=>'default','buffer'=>FALSE,'theme'=>'');
		load_template($templateLayout,$data);
	}
	public function savecheckoutCheckAjax(){
		checkrequestajax();
		$i=0;
		$msg=array();
		$CheckOutData=array();
		$proposal_id=post('proposal_id');
		$qty=post('proposal_qty');
		$ptype=post('ptype');
		
		if($proposal_id && $qty){
			$CheckOutData['proposal_id']=$proposal_id;
			$CheckOutData['qty']=$qty;
			if($this->input->post('package_id')){
				$CheckOutData['package_id']=$this->input->post('package_id');
			}
			if($this->input->post('proposal_extras')){
				$CheckOutData['extra']=$this->input->post('proposal_extras');
			}
			if($ptype && $ptype=='cart'){
				//$this->session->set_userdata('CheckOutData',$CheckOutData);	
			}else{
				$this->session->set_userdata('CheckOutData',$CheckOutData);	
			}
			
			$msg['status'] = 'OK';
			$msg['redirect'] =get_link('checkoutURL');
		}
	unset($_POST);
	echo json_encode($msg);
	}
	public function checkoutprocessCheckAjax(){
		$all_method=array('wallet','paypal');
		checkrequestajax();
		$i=0;
		$msg=array();
		$method=post('method');
		$is_cart=post('payfor');
		$processing_fee=get_option_value('processing_fee');
		$order_status=ORDER_PROCESSING;
		$order_number=time();
		$buyer_details=getMemberDetails($this->member_id,array('main'=>1));
		
		if($is_cart=='cart'){
			
		}else{
			
			$CheckOutData=$this->session->userdata('CheckOutData');
			//dd($CheckOutData,TRUE);
			if($CheckOutData && in_array($method,$all_method)){
			$proposal_details=getProposalDetails($CheckOutData['proposal_id'],array('proposal','proposal_additional','proposal_settings'));
			$seller_details=getMemberDetails($proposal_details['proposal']->proposal_seller_id,array('main'=>1));
			if(!empty($proposal_details['proposal_additional']->buyer_instruction)){
				$order_status=ORDER_PENDING;
			}	
			if($method=='wallet'){
				
				
				$processing_fee=0;
				$total=$CheckOutData['sub_total']+$processing_fee;
				
				if($buyer_details && $buyer_details['member']->balance>$total){
				//$delivery= getAllDeliveryTimes($proposal_details['proposal']->delivery_time)
				$order_time = date("M d, Y H:i:s", strtotime(" + ".$proposal_details['proposal']->delivery_time." days"));
				$OrderData=array(
				'order_number'=>$order_number,
				'order_duration'=>$proposal_details['proposal']->delivery_time,
				'order_date'=>date('Y-m-d H:i:s'),
				'order_time'=>$order_time,
				/*'order_description'=>$order_description,*/
				'seller_id'=>$proposal_details['proposal']->proposal_seller_id,
				'buyer_id'=>$this->member_id,
				'proposal_id'=>$CheckOutData['proposal_id'],
				'order_price'=>$CheckOutData['sub_total'],
				'order_qty'=>$CheckOutData['qty'],
				'order_fee'=>$processing_fee,
				'order_active'=>'1',
				'order_status'=>0,
				'payment_method'=>$method,
				);
				$order_id=$this->cart_model->processOrder($OrderData);
				if($order_id){
					$buyer_wallet_id=$buyer_details['member']->wallet_id;
					$buyer_wallet_balance=$buyer_details['member']->balance;
					$site_details=getWallet(get_option_value('SITE_MAIN_WALLET'));
					
					//$seller_wallet_id=$seller_details['member']->wallet_id;
					//$seller_wallet_balance=$seller_details['member']->balance;
					$reciver_wallet_id=$site_details->wallet_id;
					$reciver_wallet_balance=$site_details->balance;
					//$issuer_relational_data=get_option_value('website_name');
					$recipient_relational_data=$buyer_details['member']->member_name;
					$wallet_transaction_type_id=get_option_value('ORDER_PAYMENT_WALLET');
					$current_datetime=date('Y-m-d H:i:s');
					$wallet_transaction_id=insertTable('wallet_transaction',array('wallet_transaction_type_id'=>$wallet_transaction_type_id,'status'=>1,'created_date'=>$current_datetime,'transaction_date'=>$current_datetime),TRUE);
					if($wallet_transaction_id){
						insertTable('orders_transaction',array('order_id'=>$order_id,'transaction_id'=>$wallet_transaction_id));
						$insert_wallet_transaction_row=array('wallet_transaction_id'=>$wallet_transaction_id,'wallet_id'=>$buyer_wallet_id,'debit'=>$total,'description_tkey'=>'OrderID','relational_data'=>$order_id);
						insertTable('wallet_transaction_row',$insert_wallet_transaction_row);
						
						$buyer_new_balance=displayamount($buyer_wallet_balance,2)-displayamount($total,2);
						$this->db->set('used_purchases','used_purchases+'.$total,FALSE)->where('wallet_id',$buyer_wallet_id)->update('wallet',array('balance'=>$buyer_new_balance));
						wallet_balance_check($buyer_wallet_id,array('transaction_id'=>$wallet_transaction_id));	
						
						$insert_wallet_transaction_row=array('wallet_transaction_id'=>$wallet_transaction_id,'wallet_id'=>$reciver_wallet_id,'credit'=>$total,'description_tkey'=>'Transfer_from','relational_data'=>$recipient_relational_data);
						insertTable('wallet_transaction_row',$insert_wallet_transaction_row);
						
						$new_balance=displayamount($reciver_wallet_balance,2)+displayamount($total,2);
						updateTable('wallet',array('balance'=>$new_balance),array('wallet_id'=>$reciver_wallet_id));
						wallet_balance_check($reciver_wallet_id,array('transaction_id'=>$wallet_transaction_id));	
						
						updateTable('orders',array('order_status'=>$order_status,'transaction_id'=>$wallet_transaction_id),array('order_id'=>$order_id));
						
						
						$msg['status'] = 'OK';
						$msg['method'] = $method;
						$msg['redirect'] = get_link('OrderDetailsURL').$order_id;
						
					}else{
						$msg['status'] = 'FAIL';
						$msg['message'] = 'Insufficient fund';
					}
				}
				}else{
					$msg['status'] = 'FAIL';
					$msg['message'] = 'transaction error';
				}
				
			}elseif($method=='paypal'){
				$total=$CheckOutData['sub_total']+$processing_fee;
				$order_time = date("M d, Y H:i:s", strtotime(" + ".$proposal_details['proposal']->delivery_time." days"));
				$OrderData=array(
				'order_number'=>$order_number,
				'order_duration'=>$proposal_details['proposal']->delivery_time,
				'order_date'=>date('Y-m-d H:i:s'),
				'order_time'=>$order_time,
				/*'order_description'=>$order_description,*/
				'seller_id'=>$proposal_details['proposal']->proposal_seller_id,
				'buyer_id'=>$this->member_id,
				'proposal_id'=>$CheckOutData['proposal_id'],
				'order_price'=>$CheckOutData['sub_total'],
				'order_qty'=>$CheckOutData['qty'],
				'order_fee'=>$processing_fee,
				'order_active'=>'0',
				'order_status'=>0,
				'payment_method'=>$method,
				);
				$order_id=$this->cart_model->processOrder($OrderData);
				if($order_id){
					$this->session->unset_userdata('referred-'.$CheckOutData['proposal_id']);
					$this->session->unset_userdata('CheckOutData');
					$msg['status'] = 'OK';
					$msg['redirect'] = get_link('PaypalCheckOut').'checkout/'.$order_id;
				}
			}
			if($order_id){
				if($CheckOutData['extra']){
					foreach($CheckOutData['extra'] as $extra){
						$arr=array(
							'select'=>'p.id,p.name,p.price',
							'table'=>'proposal_extras as p',
							'where'=>array('p.proposal_id'=>$CheckOutData['proposal_id'],'p.id'=>$extra),
							'single_row'=>TRUE
						);
						$proposal_extras=getData($arr);
						if($proposal_extras){
							insertTable('orders_extras',array('order_id'=>$order_id,'name'=>$proposal_extras->name,'price'=>$proposal_extras->price));
						}
					}
				}
				if($proposal_details['proposal_settings']->proposal_enable_referrals == 1){
					if($this->session->userdata('referred-'.$CheckOutData['proposal_id'])){
						$referred=$this->session->userdata('referred-'.$CheckOutData['proposal_id']);
						if($referred['refer_id']!=$this->member_id){
							$proposal_referral_money=$proposal_details['proposal_settings']->proposal_referral_money;
							$r_o_comission = ($CheckOutData['sub_total']*$proposal_referral_money)/100;
							$comission = round($r_o_comission,1);
							$proposals_referrals=array(
								'proposal_id'=>$CheckOutData['proposal_id'],
								'order_id'=>$order_id,
								'seller_id'=>$seller_details['member']->member_id,
								'referrer_id'=>$referred['refer_id'],
								'buyer_id'=>$buyer_details['member']->member_id,
								'comission'=>$comission,
								'date'=>date('Y-m-d H:i:s'),
								'ip'=>$this->input->ip_address(),
								'status'=>0,
							);
							insertTable('proposals_referrals',$proposals_referrals);
						}	
					}	
				}
				if($method=='wallet'){
					$notificationData=array(
					'sender_id'=>$this->member_id,
					'receiver_id'=>$seller_details['member']->member_id,
					'template'=>'order',
					'url'=>$this->config->item('OrderDetailsURL').$order_id,
					'content'=>json_encode(array('OID'=>$order_id)),
					);
					$this->notification_model->savenotification($notificationData);
				}
				$this->session->unset_userdata('referred-'.$CheckOutData['proposal_id']);
				$this->session->unset_userdata('CheckOutData');
				
			}
			
			}else{
				$msg['status'] = 'FAIL';
			}
		}
		
		
	unset($_POST);
	echo json_encode($msg);
	}
	
	
}
